@import '../../../../styles/newIndex.scss';

// Header - the bar at the top of the screen
header {
  padding: 1rem 2rem;
  color: $white;

  h2 {
    font-family: $display-font;
    font-size: 2.4rem;
    a {
      color: $white;
      text-decoration: none;
      &:hover {
        text-shadow: 0 2px 6px #0009;
        transition: all 0.2s ease-in-out;
      }
    }
  }

  svg {
    &.hidden {
      display: none;
    }
    // This is the hanburger menu icon, which can be styled as if it's text
    @media screen and (min-width: 600px) {
      // Hide the icon on larger screen sizes, as the menu is never hidden so the button is not needed
      display: none;
    }
    font-size: 2.4rem;
    cursor: pointer;
    color: $white;
    transition: all 0.15s ease-in;
    &:hover {
      transition: all 0.15s ease-in;
      color: darken($white, 10%);
    }
  }

  // Position the title and hanburger icon at opposite ends of the header
  display: flex;
  flex-flow: row nowrap;
  justify-content: space-between;

  // Position the header in FRONT of the nav menu for animation purposes
  position: relative;
  z-index: 10;
  overflow-x: hidden;

  @media screen and (min-width: 600px) {
    // At higher screen sizes, move the header position back so the nav manu can show on top of it
    z-index: 1;
  }
}

/*
  Nav Menu - The part of the menu that display page links...
  This maybe should be refactored but for now:
    - The .menu-container is absolutely positioned to a 0-height .nav-menu component,
      which allows us to animate the position of the menu in mobile view so that it
      appears as if the menu is coming down out of the header
    - On desktop view, the .menu-container is fixed positioned INSIDE the header, and
      its z-index is moved forward so that it always shows in front of the header, so
      that it appears more like a standard header. The animation also changes from a
      darkerbackground of the box to a text shadow.
    - Think of the .nav-menu more as a line than a container - when the .menu-container
      is positioned to the top of the line, it will be displayed below the line. When it's
      positioned to the bottom of the line, it will be displayed above the line.
*/
.menu-container {
  // This element has 0 height and is used purely to position the .menu-container
  height: 0;
  position: relative;
  z-index: 7;

  & + div {
    // Selects the element in the DOM *after* .nav-menu
    // This makes sure that the body of the page always fills the screen
    flex-grow: 1;
  }
}

.nav-menu {
  // Use these to adjust spacing of emnu elements to maintain animation integrity
  $font-size: 1.7rem; // font size
  $vertical-padding: 1rem; // space between menu items
  $menu-item-count: 5; // number of items in menu

  // When menu is visible (mobile) position it to the top-right corder of the 0-height .nav-menu
  position: absolute;
  bottom: auto;
  top: 0;
  right: 0;
  transition: all 0.3s ease-in-out;

  // When hidden, the element is positioned with a negative top position
  &.hidden {
    // Uses the variables to calculate position for animation
    top: -2 * $menu-item-count * $vertical-padding - $menu-item-count *
      $font-size - 0.5rem; // the extra .2 is for visual consistency
    transition: all 0.3s ease-in-out;
    @media screen and (min-width: 600px) {
      // At tablet width or greater, prevent the menu from being hidden
      top: unset;
    }
  }

  // Flex the elements in a column
  display: flex;
  flex-flow: column nowrap;

  // Add a rounder edge to the mobile menu
  border-radius: 0 0 0 4px;
  overflow: hidden;
  // Width = 100% on mobile so that left handed users and single handed users have an easier way to access the nav menu
  width: 100%;

  @media screen and (min-width: 400px) {
    // Min-width will allow the nav menu to be a small drop down in the top right hand corner of the page to conserve space
    // which will only be present on desktops & tablets
    width: unset;
  }

  // Change the menu at larger screens to be positioned inside of the header by making the
  // flexbox flow into a row rather than a column, and positioning the menu to the bottom
  // of the .nav-menu item rather than the top.
  @media screen and (min-width: $tablet) {
    top: unset;
    bottom: 0.5rem;
    right: 0.5rem;
    flex-flow: row nowrap;
  }

  .menu-item {
    &:last-of-type {
      @media screen and (min-width: $tablet) {
        margin-right: 1.5rem;
      }
    }
    a,
    span.link {
      font-family: $text-font;
      font-size: $font-size;
      line-height: $font-size - 0.2rem;
      font-weight: 500;
      display: block;
      color: $white;
      text-decoration: none;
      text-align: center;

      // Make the elements have box-like padding and transition the backgrounds
      padding: $vertical-padding 2rem $vertical-padding + 0.2rem; // add slightly more space on the bottoms
      transition: all 0.2s ease-in-out;

      border-top: 1px solid #0003;

      @media screen and (min-width: 600px) {
        // Lower the left/right padding when the menu is a row
        padding: $vertical-padding 0;
        margin-left: 1.5rem;
        border-top: none;
      }
      @media screen and (min-width: tablet) {
        padding: $vertical-padding 1rem;
      }

      &:hover {
        // On hover, make the box darker
        cursor: pointer;
        transition: all 0.2s ease-in-out;

        @media screen and (min-width: 600px) {
          // On larger screen sizes, prevent the box from darkening and instead add a text shadow
          text-shadow: 0 2px 6px #0009;
        }
      }

      &.active {
        text-decoration: underline;
      }
    }
  }
}
